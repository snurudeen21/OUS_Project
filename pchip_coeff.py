from scipy.interpolate import PchipInterpolator
import numpy as np
import matplotlib.pyplot as plt

x=np.array([883.096956673858,896.714870819744,903.477160451193,907.706106994277,910.670321154375,912.896258235772,914.647054978537,916.070824956113,917.258167389847,918.268029159256,919.140638426821,919.904514272702,920.580513545315,921.184289696064,921.7278511824,922.220584889043,922.669948902167,923.081953901838,923.461505402384,923.81265201059,924.138768755877,924.442694652154,924.726837409986,924.993254184952,925.243714585219,925.479750368185,925.702695026862,925.913715610257])

y=np.array([110.369010483718,220.738020967437,331.107031451155,441.476041934874,551.845052418592,662.214062902311,772.583073386029,882.952083869747,993.321094353466,1103.69010483718,1214.0591153209,1324.42812580462,1434.79713628834,1545.16614677206,1655.53515725578,1765.9041677395,1876.27317822321,1986.64218870693,2097.01119919065,2207.38020967437,2317.74922015809,2428.11823064181,2538.48724112552,2648.85625160924,2759.22526209296,2869.59427257668,2979.9632830604,3090.33229354412])

interpolator = PchipInterpolator(x, y)

x_new = np.linspace(883, 926, 200)
y_new = interpolator(x_new)

# Plot
plt.plot(x, y, 'o', label='Data')
plt.plot(x_new, y_new, '-', label='Polynomial Fit')
plt.legend()
plt.title("Polynomial Fit")
plt.grid()
plt.show()

# Coefficients shape: (4, n_intervals)
coeffs = interpolator.c
breaks = interpolator.x

for i in range(len(breaks) - 1):
    a, b, c, d = coeffs[:, i]
    x0 = breaks[i]
    print(f"Interval {i}: x in [{x0:.5f}, {breaks[i+1]:.5f}]")
    print(f"  P(x) = {a:.6f}*(x - {x0:.5f})^3 + {b:.6f}*(x - {x0:.5f})^2 + {c:.6f}*(x - {x0:.5f}) + {d:.6f}")
    print()